{{#extend "base"}}

{{#content "main" mode="prepend"}}
<div class="headers hide-mobile">
  <h1>JavaScript</h1>
  <h2>Build fully-fledged web applications</h2>
</div>

<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">The part I love most about teaching javascript is the part where they get scared</p>&mdash; GonzoHacker (@GonzoHacker) <a href="https://twitter.com/GonzoHacker/status/684034343677890561">January 4, 2016</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>Believe it or not, we already have most of the tools we need to make a fully-functioning website. However, HTML and CSS impose some frustrating restrictions on web development that get completely blown away when you have some familiarity with JavaScript.</p>

<p>It would be impossible to offer a complete course in JavaScript on one page of an introductory web development course. So let's take a little bit of a different approach to this. Instead of learning JavaScript concepts from the ground up, we'll learn how to do some cool things with an easy-to-use JavaScript <strong>library</strong> called <strong>jQuery</strong>.</p>

<p>Note that this is inadequate preparation for making anything more complex than personal sites! If you want to learn JavaScript properly, I cannot recommend <a href="http://eloquentjavascript.net/">Eloquent JavaScript</a> highly enough. You don't need any programming background to start reading it, and you'll be surprised how quickly you'll get into some really advanced concepts.</p>

<p>With that said, you'll still come out on the other side of this lesson with some really, really cool tricks up your sleeves. Onwards and upwards!</p>

<div class="separator"></div>

<p>While HTML and CSS can make a website look great, they have their shortcomings. With just HTML and CSS, it's impossible to change what's on the page once it loads. JavaScript allows us to do just that&mdash;it lets us manipulate HTML elements and their properties while someone's viewing the page.</p>

<h3 id="intro"><a href="#intro">What can I do with JavaScript?</a></h3>

<p>Let's start by opening up the <strong>console</strong>! To do this, inspect element anywhere on this page and choose "console" from the tabs at the top of the inspector. Inside the console, type <code class="inline-code">console.log("Hello website!");</code>, and press enter.</p>

<p>The console is like a little JavaScript sandbox. When you write JavaScript statements in the console, it gets interpreted just like any JavaScript that might have already been included on the website. That means the console is a great place to experiment with JavaScript! Bear in mind that anything you do in the console only affects your current <strong>session</strong> in your browser. So, if you mess anything up super bad, you can always just refresh.</p>

<p>You can open up the console on any website you visit! Depending on the site, there might already be a lot of garbage inside the console, but no matter what, you'll be able to type things into the console and play around with the HTML on the website.</p>

<p>You can also use <code class="inline-code">console.log</code> statements in JavaScript files. That's what I've done in order to start a conversation with you. :)</p>

<div class="separator"></div>

<h3 id="selectors"><a href="#selectors"></a></h3>

<!-- var

console.log

arrays

jquery...
selectors - dead easy

event listeners

toggle

animate -->




<script type="text/javascript">console.log("Hi!");</script>

<p>More content coming soon!</p>



{{/content}}

{{#content "nav" mode="prepend"}}
<div class="next-subject"><a href="/jade/git.html">Version control with Git and GitHub</a></div>
<div class="arrow">
  <a href="/jade/git.html">
    <div class="line"></div>
    <div class="line"></div>
  </a>
</div>
{{/content}}

{{/extend}}